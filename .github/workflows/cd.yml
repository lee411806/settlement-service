name: CD - Deploy to EC2

# 실제 배포 시에는 아래 주석 해제
# on:
#   workflow_run:
#     workflows: ["CI - Test only"]
#     types:
#       - completed

# act 테스트용
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 저장소에서 소스코드 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'   #  필수 옵션

      # 3. gradlew 실행 권한 부여
      - name: Make gradlew executable
        run: chmod +x ./gradlew    #  필수 권한 부여

      # 4. Gradle로 jar 빌드
      - name: Build JAR
        run: ./gradlew clean build -x test

#      # 5. EC2에 jar 파일 전송
#      - name: Copy JAR to EC2
#        uses: appleboy/scp-action@v0.1.3
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ec2-user
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
#          source: ./build/libs/*.jar
#          target: /home/ec2-user/app.jar
#
#      # 6. EC2에서 jar 실행
#      - name: Run JAR on EC2
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ec2-user
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
#          script: |
#            pkill -f 'java -jar' || true
#
#            export SPRING_APPLICATION_NAME=settlement-service
#            export SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/settlementdb
#            export SPRING_DATASOURCE_SLAVE_URL=jdbc:mysql://localhost:3307/settlementdb
#            export SPRING_DATASOURCE_USERNAME=root
#            export SPRING_DATASOURCE_PASSWORD=manager
#            export SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
#            export SPRING_DATA_REDIS_HOST=localhost
#            export SPRING_DATA_REDIS_PORT=6379
#            export SPRING_JPA_HIBERNATE_DDL_AUTO=update
#            export SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL=true
#            export SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
#            export SPRING_JPA_PROPERTIES_HIBERNATE_USE_SQL_COMMENTS=true
#            export SPRING_BATCH_JOB_ENABLED=false
#            export SPRING_BATCH_JDBC_INITIALIZE_SCHEMA=always
#            export SPRING_BATCH_JDBC_SCHEMA=classpath:org/springframework/batch/core/schema-mysql.sql
#            export LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CACHE=trace
#            export SPRING_CONFIG_LOCATION=classpath:/application-docker.yml
#
#            nohup java -jar app.jar > app.log 2>&1 &
